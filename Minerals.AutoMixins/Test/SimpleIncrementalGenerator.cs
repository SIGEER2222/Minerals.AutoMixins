namespace Minerals.AutoMixins.Generators;

[Generator]
public class SimpleIncrementalGenerator : IIncrementalGenerator
{
    public void Initialize(IncrementalGeneratorInitializationContext context)
    {
        context.RegisterSourceOutput(context.CompilationProvider, (sourceProductionContext, compilation) =>
        {
            var codeBuilder = new StringBuilder();
            codeBuilder.AppendLine("using System;");
            codeBuilder.AppendLine("namespace Generated;");
            codeBuilder.AppendLine("public static class HelloWorld");
            codeBuilder.AppendLine("{");
            codeBuilder.AppendLine("    public static string SayHello() => \"Hello, World!\";");
            codeBuilder.AppendLine("}");

            sourceProductionContext.AddSource("HelloWorldGenerator", codeBuilder.ToString());
        });
    }

    public static SourceText GenerateAttribute()
    {
        const string source = """
            namespace Minerals.AutoMixins
            {
                [global::System.Diagnostics.DebuggerNonUserCode]
                [global::System.Runtime.CompilerServices.CompilerGenerated]
                [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
                [global::System.AttributeUsage(global::System.AttributeTargets.Class | global::System.AttributeTargets.Struct, AllowMultiple = false, Inherited = false)]
                public sealed class GenerateMixinAttribute : global::System.Attribute
                {
                }
            }
            """;
        var builder = new CodeBuilder();
        builder.AddAutoGeneratedHeader(Assembly.GetExecutingAssembly()).WriteLine(source);
        return SourceText.From(builder.ToString(), Encoding.UTF8);
    }
}